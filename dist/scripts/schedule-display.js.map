{"version":3,"sources":["../bower_components/bootstrap-sass-official/assets/javascripts/bootstrap/button.js","../assets/scripts/schedule-display.js","../assets/scripts/signup-modals.js"],"names":["$","Plugin","option","this","each","$this","data","options","Button","toggle","setState","element","$element","extend","DEFAULTS","isLoading","VERSION","loadingText","prototype","state","d","$el","val","is","resetText","setTimeout","proxy","addClass","attr","prop","removeClass","removeAttr","changed","$parent","closest","length","$input","find","hasClass","toggleClass","trigger","old","fn","button","Constructor","noConflict","document","on","e","$btn","target","call","preventDefault","first","test","type","jQuery","ready","resizeColorBox","resizeTimer","clearTimeout","colorbox","resize","width","height","reset_navigation","el","buttons","className","forEach","setAttribute","parseInt","getAttribute","stripe_and_filter","stripeTable","table","filter","filterTable","callback","term","placeholder","mz_mindbody_schedule","filter_default","highlightClass","inputType","label","selector","quickListClass","quickList","quick_1","quick_2","quick_3","locations","Locations_dict","key","value","dataset","time","Date","parse","replace","now","sub","marked_as_sub","after","sub_by_text","nonce","atts","container","settings","window","innerWidth","addEventListener","children","html","slice","getElementById","offset","ajax","dataType","context","url","ajaxurl","action","success","json","grid","horizontal","innerHTML","message","fail","staffName","classDescription","decodeURIComponent","popUpContent","staff_preposition","undefined","load","href","staffImage","classID","htmlClassDescription","registrants_header","htmlRegistrants","isArray","name","get_registrants_error","console","log","ev","staffID","siteID","subText","remove","mode_select","append","initial","click","i","item","text","swap","get_login_form","additional_data","Object","keys","location","toString","account","spinner","classTime","your_account","class_registration_content","confirm_signup","form","result","serializeArray","serialize","signup_nonce","login_form","formData"],"mappings":"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","file":"schedule-display.js","sourcesContent":["/* ========================================================================\n * Bootstrap: button.js v3.3.7\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element);\n    this.options   = $.extend({}, Button.DEFAULTS, options);\n    this.isLoading = false\n  };\n\n  Button.VERSION  = '3.3.7';\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  };\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled';\n    var $el  = this.$element;\n    var val  = $el.is('input') ? 'val' : 'html';\n    var data = $el.data();\n\n    state += 'Text';\n\n    if (data.resetText == null) $el.data('resetText', $el[val]());\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state]);\n\n      if (state == 'loadingText') {\n        this.isLoading = true;\n        $el.addClass(d).attr(d, d).prop(d, true)\n      } else if (this.isLoading) {\n        this.isLoading = false;\n        $el.removeClass(d).removeAttr(d).prop(d, false)\n      }\n    }, this), 0)\n  };\n\n  Button.prototype.toggle = function () {\n    var changed = true;\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]');\n\n    if ($parent.length) {\n      var $input = this.$element.find('input');\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked')) changed = false;\n        $parent.find('.active').removeClass('active');\n        this.$element.addClass('active')\n      } else if ($input.prop('type') == 'checkbox') {\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false;\n        this.$element.toggleClass('active')\n      }\n      $input.prop('checked', this.$element.hasClass('active'));\n      if (changed) $input.trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'));\n      this.$element.toggleClass('active')\n    }\n  };\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this);\n      var data    = $this.data('bs.button');\n      var options = typeof option == 'object' && option;\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)));\n\n      if (option == 'toggle') data.toggle();\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button;\n\n  $.fn.button             = Plugin;\n  $.fn.button.Constructor = Button;\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old;\n    return this\n  };\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target).closest('.btn');\n      Plugin.call($btn, 'toggle');\n      if (!($(e.target).is('input[type=\"radio\"], input[type=\"checkbox\"]'))) {\n        // Prevent double click on radios, and the double selections (so cancellation) on checkboxes\n        e.preventDefault();\n        // The target component still receive the focus\n        if ($btn.is('input,button')) $btn.trigger('focus');\n        else $btn.find('input:visible,button:visible').first().trigger('focus')\n      }\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n}(jQuery);\n","(function ($) {\n    $(document).ready(function ($) {\n\n        // Initialize some variables\n        var nonce = mz_mindbody_schedule.nonce,\n            atts = mz_mindbody_schedule.atts,\n            container = $('#mzScheduleDisplay'),\n            // TODO use Ajax event handlers to globally handle loader spinners: https://stackoverflow.com/a/40513161/2223106\n            spinner = '<i class=\"fa fa-spinner fa-3x fa-spin\" style=\"position: fixed; top: 50%; left: 50%;\"></i>';\n\n        // Some colorbox global settings\n        $.colorbox.settings.width  = ($(window).innerWidth() <= 500) ? '95%' : '75%';\n        $.colorbox.settings.height = '75%';\n\n        /** Colorbox resize function\n         * source: https://github.com/jackmoore/colorbox/issues/158\n         */\n        var resizeTimer;\n        function resizeColorBox()\n        {\n            if (resizeTimer) clearTimeout(resizeTimer);\n            resizeTimer = setTimeout(function() {\n                if (jQuery('#cboxOverlay').is(':visible')) {\n                    jQuery.colorbox.resize({width:'90%', height:'90%'});\n                }\n            }, 300);\n        }\n\n        // Resize Colorbox when resizing window or changing mobile device orientation\n        $(window).resize(resizeColorBox);\n        window.addEventListener(\"orientationchange\", resizeColorBox, false);\n\n        // Run our Init function\n        stripe_and_filter();\n\n        /**\n         * Navigate Schedule\n         *\n         *\n         */\n        $('#mzScheduleNavHolder .following, #mzScheduleNavHolder .previous').on('click', function (e) {\n            e.preventDefault();\n            container.children().each( function (e){\n                $(this).html('');\n            });\n            container.toggleClass('loader');\n            var buttons = [].slice.call(document.getElementById('mzScheduleNavHolder').children);\n            // Update attributes\n            var offset = atts.offset = this.dataset.offset;\n            // Update nav link \"offset\" data attribute\n            if (this.className == 'following') {\n                buttons.forEach(function (button) {\n                    button.setAttribute('data-offset', parseInt(button.getAttribute('data-offset')) + parseInt(1));\n                });\n            } else if (this.className == 'previous') {\n                buttons.forEach(function (button) {\n                    button.setAttribute('data-offset', button.getAttribute('data-offset') - 1);\n                });\n            }\n            $.ajax({\n                type: \"post\",\n                dataType: \"json\",\n                context: this,\n                url: mz_mindbody_schedule.ajaxurl,\n                data: {action: 'mz_display_schedule', nonce: nonce, atts: atts},\n                success: function (json) {\n                    if (json.type == \"success\") {\n                        container.toggleClass('loader');\n                        if (json.grid && json.horizontal) {\n                            document.getElementById(\"gridDisplay\").innerHTML = json.grid;\n                            document.getElementById(\"horizontalDisplay\").innerHTML = json.horizontal;\n                        } else if (json.grid) {\n                            document.getElementById(\"gridDisplay\").innerHTML = json.grid;\n                        } else {\n                            document.getElementById(\"horizontalDisplay\").innerHTML = json.horizontal;\n                        }\n                        stripe_and_filter();\n                    } else {\n                        reset_navigation(this, buttons);\n                        container.toggleClass('loader');\n                        container.html(json.message);\n                        stripe_and_filter();\n                    }\n                }\n            })\n                .fail(function (json) {\n                    reset_navigation(this, buttons);\n                    container.toggleClass('loader');\n                    container.html('Sorry but there was an error retrieving schedule.');\n                }); // End Ajax\n        }); // End click navigation\n\n        function reset_navigation(el, buttons) {\n            // Reset nav link \"offset\" data attribute\n            if (el.className == 'previous') {\n                buttons.forEach(function (button) {\n                    button.setAttribute('data-offset', parseInt(button.getAttribute('data-offset')) + parseInt(1));\n                });\n            } else if (el.className == 'following') {\n                buttons.forEach(function (button) {\n                    button.setAttribute('data-offset', button.getAttribute('data-offset') - 1);\n                });\n            }\n        }\n\n\n        /**\n         * Class Description Modal\n         *\n         *\n         */\n        $(document).on('click', \"a[data-target=mzModal]\", function (e) {\n            e.preventDefault();\n            var target = $(this).attr(\"href\"),\n                staffName = this.getAttribute('data-staffName'),\n                classDescription = decodeURIComponent(this.getAttribute('data-classDescription')),\n                popUpContent = '<h3>' + this.innerHTML + ' ' + mz_mindbody_schedule.staff_preposition + ' ' + staffName + '</h3>';\n            var subText = ($(this).attr(\"data-sub\") !== undefined) ? '<span class=\"sub-text\">' + mz_mindbody_schedule.sub_by_text + '</span>' + ' ' : ' ';\n\n            popUpContent += '<div class=\"mz-staffInfo\" id=\"StaffInfo\">' + classDescription + '</div>';\n\n            // load the url and show modal on success\n            $(\"#mzModal\").load(target, function () {\n                $.colorbox({html: popUpContent, href: target});\n                $(\"#mzModal\").colorbox();\n            });\n            return false;\n        });\n\n        /**\n         * Show Registrants\n         *\n         *\n         */\n        $(document).on('click', \"a[data-target=registrantModal]\", function (e) {\n            e.preventDefault();\n            var target = $(this).attr(\"href\");\n            var classDescription = $(this).attr('data-classDescription');\n            var staffName = $(this).attr('data-staffName');\n            var staffImage = $(this).attr('data-staffImage');\n            var className = $(this).attr(\"data-className\");\n            var classID = $(this).attr(\"data-classID\");\n            var nonce = $(this).attr(\"data-nonce\");\n            var popUpContent = '<div class=\"mz-classInfo\">';\n            var subText = ($(this).attr(\"data-sub\") !== undefined) ? '<span class=\"sub-text\">' + mz_mindbody_schedule.sub_by_text + '</span>' + ' ' : ' ';\n            popUpContent += '<h3>' + className + '</h3>';\n            popUpContent += '<h4>' + mz_mindbody_schedule.staff_preposition + ' ' + staffName + '</h4>';\n\n            if (typeof staffImage != 'undefined') {\n                popUpContent += '<img class=\"mz-staffImage\" src=\"' + staffImage + '\" />';\n            }\n\n            var htmlClassDescription = '<div class=\"mz_modalClassDescription\">';\n            htmlClassDescription += \"<div class='class-description'>\" + decodeURIComponent(classDescription) + \"</div></div>\";\n            popUpContent += htmlClassDescription;\n            popUpContent += '</div>';\n\n            popUpContent += '<h3>' + mz_mindbody_schedule.registrants_header + '</h3>';\n            popUpContent += '<div id=\"modalRegistrants\"><div id=\"ClassRegistrants\" style=\"min-height:90px;\">';\n            popUpContent += spinner;\n            $(\"#registrantModal\").load(target, function () {\n                $.colorbox({html: popUpContent, href: target});\n                $(\"#registrantModal\").colorbox();\n            });\n            $.ajax({\n                type: \"GET\",\n                dataType: 'json',\n                url: mz_mindbody_schedule.ajaxurl,\n                data: {action: 'mz_mbo_get_registrants', nonce: nonce, classID: classID},\n                success: function (json) {\n                    if (json.type == \"success\") {\n                        htmlRegistrants = '<ul class=\"mz-classRegistrants\">';\n                        if ($.isArray(json.message)) {\n                            json.message.forEach(function (name) {\n                                htmlRegistrants += '<li>' + name.replace('_', ' ') + '</li>';\n                            });\n                        } else {\n                            htmlRegistrants += '<li>' + json.message + '</li>';\n                        }\n                        htmlRegistrants += '</ul>';\n                        $('#modalRegistrants').find('#ClassRegistrants')[0].innerHTML = htmlRegistrants;\n                    } else {\n                        $('#modalRegistrants').find('#ClassRegistrants')[0].innerHTML = mz_mindbody_schedule.get_registrants_error;\n                    }\n                } // ./ Ajax Success\n\n            }) // End Ajax\n                .fail(function (json) {\n                    reset_navigation(this, buttons);\n                    console.log('fail');\n                    console.log(json);\n                    $('#modalRegistrants').find('#ClassRegistrants')[0].innerHTML = mz_mindbody_schedule.get_registrants_error;\n                }); // End Fail\n            return false;\n        }); // End click\n\n        /**\n         * Staff Modal\n         *\n         *\n         */\n        $(document).on('click', \"a[data-target=mzStaffScheduleModal]\", function (ev) {\n            ev.preventDefault();\n            var target = $(this).attr(\"href\");\n            var staffID = $(this).attr('data-staffID');\n            var siteID = $(this).attr('data-siteID');\n            var staffName = $(this).attr('data-staffName');\n            var nonce = $(this).attr(\"data-nonce\");\n            var subText = ($(this).attr(\"data-sub\") !== undefined) ? ' <span class=\"sub-text\">(' + mz_mindbody_schedule.sub_by_text + ' ' + $(this).attr(\"data-sub\") + ') </span>' + ' ' : ' ';\n            var popUpContent = '<h3>' + staffName + ' ' + subText + '</h3><div class=\"mz-staffInfo\" id=\"StaffInfo\"></div>';\n\n            popUpContent += '<i class=\"fa fa-spinner fa-3x fa-spin\" style=\"position: fixed; top: 50%; left: 50%;\"></i>';\n            $(\"#mzStaffScheduleModal\").load(target, function () {\n                $.colorbox({html: popUpContent, href: target});\n                $(\"#mzStaffScheduleModal\").colorbox();\n            });\n            $.ajax({\n                type: \"GET\",\n                dataType: 'json',\n                url: mz_mindbody_schedule.ajaxurl,\n                data: {action: 'mz_mbo_get_staff', nonce: nonce, staffID: staffID, siteID: siteID},\n                success: function (json) {\n                    if (json.type == \"success\") {\n                        $('.fa-spinner').remove();\n                        $('#StaffInfo').html(json.message);\n                    } else {\n                        $('#StaffInfo').html('ERROR FINDING STAFF INFO');\n                    }\n                } // ./ Ajax Success\n            }) // End Ajax\n            .fail(function (json) {\n                $('#StaffInfo').html('ERROR RETURNING STAFF INFO');\n            }); // End Fail\n        });\n\n        /**\n         * Mode Select\n         *\n         * Display either grid or horizontal schedule depending on user input from button\n         */\n        if (mz_mindbody_schedule.mode_select !== '0') {\n            $('#mzScheduleNavHolder').first().append($('<a id=\"mode-select\" class=\"btn btn-xs mz-mode-select\">' + mz_mindbody_schedule.initial + '</a>'));\n            $('#mode-select').click(function () {\n                $('.mz-schedule-display').each(function (i, item) {\n                    $(item).toggleClass('mz_hidden');\n                    $(item).toggleClass('mz_schedule_filter');\n                });\n                stripe_and_filter();\n                $('#mode-select').text(function (i, text) {\n                    return text == mz_mindbody_schedule.initial ? mz_mindbody_schedule.swap : mz_mindbody_schedule.initial;\n                });\n            });\n        } // if mode button = 1\n\n        /**\n         * Stripe the Table and if Filter is enabled, init the filter.\n         */\n        function stripe_and_filter() {\n            /*\n             * Filter Table Init\n             *\n             */\n            var stripeTable = function (table) { //stripe the table (jQuery selector)\n                table.find('tr').removeClass('striped').filter(':visible:even').addClass('striped');\n            };\n\n            if ($('table.mz-schedule-filter').length) {\n                $('table.mz-schedule-filter').filterTable({\n                    callback: function (term, table) {\n                        stripeTable(table);\n                    }, // call the striping after every change to the filter term\n                    placeholder: mz_mindbody_schedule.filter_default,\n                    highlightClass: 'alt',\n                    inputType: 'search',\n                    label: mz_mindbody_schedule.label,\n                    selector: mz_mindbody_schedule.selector,\n                    quickListClass: 'mz_quick_filter',\n                    quickList: [mz_mindbody_schedule.quick_1, mz_mindbody_schedule.quick_2, mz_mindbody_schedule.quick_3],\n                    locations: mz_mindbody_schedule.Locations_dict\n                });\n                stripeTable($('table.mz-schedule-filter')); //stripe the table for the first time\n            } else {\n                // No filter\n                stripeTable($('table.mz-schedule-table')); //stripe the table for the first time\n            }\n\n            /**\n             * Disable sign-up buttons that occur prior to present time\n             */\n            $('.mz_date_display').each(function(key, value){\n                if(this.dataset.time){\n                    // Get rid of the T and replace - with / for Safari\n                    if (Date.parse(this.dataset.time.replace(/-/g, '/').replace(/T/g, ' ')) < Date.now()) {\n                        $(this).find('a').addClass('disabled');\n                    }\n                }\n            });\n\n            /**\n             * Disable grid sign-up buttons that occur prior to present time\n             */\n            $('.grid-sign-up-button').each(function(key, value){\n                if(this.dataset.time){\n                    // Get rid of the T and replace - with / for Safari\n                    if (Date.parse(this.dataset.time.replace(/-/g, '/').replace(/T/g, ' ')) < Date.now()) {\n                        $(this).addClass('disabled');\n                    }\n                }\n            });\n\n            /**\n             * Loop through and display sub-details\n             */\n            $(\"a[data-target=mzStaffScheduleModal]\").each( function(key, value){\n                if (this.dataset.sub && !this.dataset.marked_as_sub){\n                    $(this).after('&nbsp;<a href=\"#\" title=\"' + mz_mindbody_schedule.sub_by_text + ' ' + this.dataset.sub + '\" style=\"text-decoration:none;\" onclick=\"return false\"><svg height=\"20\" width=\"20\">' +\n                        '<circle cx=\"10\" cy=\"10\" r=\"8\" stroke=\"black\" stroke-width=\"1\" fill=\"white\" />' +\n                        '<text x=\"50%\" y=\"50%\" text-anchor=\"middle\" fill=\"black\" font-size=\"15px\" font-family=\"Arial\" dy=\".25em\">s</text>' +\n                    '</svg></a>');\n                    // Only do this once\n                    this.dataset.marked_as_sub = true;\n                }\n            });\n\n        }\n\n    }); // End document ready\n})(jQuery);","(function ($) {\n    $(document).ready(function ($) {\n\n        // Initialize some variables\n        var nonce = mz_mindbody_schedule.nonce,\n            atts = mz_mindbody_schedule.atts,\n            // Just one location for use in general MBO site link\n            location = atts.locations[0].toString(),\n            siteID = atts.account ? atts.account : mz_mindbody_schedule.account,\n            spinner = '<i class=\"fa fa-spinner fa-3x fa-spin\" style=\"position: fixed; top: 50%; left: 50%;\"></i>';\n\n        /**\n         * Initial Modal Window to Register for a Class\n         *\n         * Also leads to options to login and sign-up with MBO\n         *\n         */\n        $(document).on('click', \"a[data-target=mzSignUpModal]\", function (ev) {\n            ev.preventDefault();\n\n            var target = $(this).attr(\"href\");\n            var siteID = $(this).attr('data-siteID');\n            var nonce = $(this).attr(\"data-nonce\");\n            var location = $(this).attr(\"data-location\");\n            var classID = $(this).attr(\"data-classID\");\n            var className = $(this).attr(\"data-className\");\n            var staffName = $(this).attr(\"data-staffName\");\n            var classTime = $(this).attr(\"data-time\");\n            var popUpContent = '<div class=\"modal__header\"><h3>' + mz_mindbody_schedule.your_account + '</h3></div>';\n\n            var class_registration_content = classTime + ' ' + className + ' ' + mz_mindbody_schedule.staff_preposition + ' ' + staffName;\n\n            if ( $('[data-loggedMBO]').attr(\"data-loggedMBO\") == 0 ) { // Not signed in\n\n                var login_form = get_login_form({\n                    classID: classID,\n                    className: className,\n                    staffName: staffName,\n                    classTime: classTime,\n                    location: location\n                });\n\n                class_registration_content += login_form.html();\n\n            } else { // We are signed in\n\n                var logged_in = true;\n\n                class_registration_content += '<hr/>';\n\n                class_registration_content += '<button class=\"btn btn-primary\" data-location=\"'+location+'\" data-siteID=\"siteID\" data-nonce=\"'+nonce+'\" data-classID=\"'+classID+'\" id=\"signUpForClass\">' + mz_mindbody_schedule.confirm_signup + '</button>';\n\n            }\n\n            popUpContent += '<div class=\"mz-classRegister\" id=\"classRegister\">' + class_registration_content + '<div id=\"registrationStatus\"></div></div>';\n\n            $(\"#mzSignUpModal\").load(target, function () {\n                $.colorbox({html: popUpContent,  href: target});\n                $(\"#mzSignUpModal\").colorbox();\n            });\n\n        });\n\n        /**\n         * Register for a class\n         */\n        $(document).on('click', '#signUpForClass', function (ev) {\n            ev.preventDefault();\n            var siteID = $(this).attr('data-siteID');\n            var nonce = $(this).attr(\"data-nonce\");\n            var location = $(this).attr(\"data-location\");\n            var classID = $(this).attr(\"data-classID\");\n            //$('#ClassRegister').html(spinner);\n            $(this).prop(\"disabled\",true).after('<i class=\"fa fa-spinner fa-3x fa-spin\" style=\"position: fixed; top: 50%; left: 50%;\"></i>');\n            $.ajax({\n                type: \"GET\",\n                dataType: 'json',\n                url: mz_mindbody_schedule.ajaxurl,\n                context: this,\n                data: {\n                    action: 'mz_register_for_class',\n                    nonce: nonce,\n                    siteID: siteID,\n                    classID: classID,\n                    location: location\n                },\n                success: function (json) {\n                    $(this).remove();\n                    $('.fa-spinner').remove();\n                    if (json.type == \"success\") {\n                        $('#registrationStatus').html(json.message);\n                    } else {\n                        $('#registrationStatus').html('ERROR REGISTERING FOR CLASS. ' + json.message);\n                        console.log(json);\n                    }\n                } // ./ Ajax Success\n            }) // End Ajax\n                .fail(function (json) {\n                    $('#registrationStatus').html('ERROR REGISTERING FOR CLASS. ' + json.message);\n                    console.log(json);\n                }); // End Fail\n        });\n\n        /**\n         * Sign In to MBO\n         */\n        $(document).on('submit', 'form[id=\"mzLogIn\"]', function (ev) {\n            ev.preventDefault();\n            var form = $(this);\n            var formData = form.serializeArray();\n            var result = { };\n            $.each($('form').serializeArray(), function() {\n                result[this.name] = this.value;\n            });\n            $('#classRegister').html(spinner);\n\n            $.ajax({\n                dataType: 'json',\n                url: mz_mindbody_schedule.ajaxurl,\n                type: form.attr('method'),\n                context: this, // So we have access to form data within ajax results\n                data: {action: 'mz_client_log_in',\n                        form: form.serialize(),\n                        nonce: result.nonce,\n                        classID: result.classID,\n                        staffName: result.staffName,\n                        classTime: result.classTime,\n                        location: result.location},\n                success: function(json) {\n                    var formData = $(this).serializeArray();\n                    var result = { };\n                    $.each($('form').serializeArray(), function() {\n                        result[this.name] = this.value;\n                    });\n\n                    var class_registration_content = result.classTime + ' ' + result.className + ' ' + mz_mindbody_schedule.staff_preposition + ' ' + result.staffName;\n\n                    if (json.type == \"success\") {\n\n                        $('#classRegister').html(json.message);\n\n                        // Store in DOM that we are logged in now.\n                        $('[data-loggedMBO]').attr(\"data-loggedMBO\", 1);\n\n                        class_registration_content += '<hr/>';\n\n                        class_registration_content += '<button class=\"btn btn-primary\" data-nonce=\"'+result.nonce+'\" data-location=\"'+result.location+'\" data-classID=\"'+result.classID+'\" id=\"signUpForClass\">' + mz_mindbody_schedule.confirm_signup + '</button>';\n\n                        class_registration_content += '<div class=\"modal__footer btn-group\" class=\"signupModalFooter\">\\n' +\n                            '    <a class=\"btn btn-primary\" data-nonce=\"'+mz_mindbody_schedule.signup_nonce+'\" id=\"MBOSchedule\" target=\"_blank\">My Classes</a>\\n' +\n                            '    <a href=\"https://clients.mindbodyonline.com/ws.asp?&amp;sLoc='+mz_mindbody_schedule.location+'&studioid='+mz_mindbody_schedule.siteID+'>\" class=\"btn btn-primary btn-xs\" id=\"MBOSite\">Manage on Mindbody Site></a>\\n' +\n                            '    <a class=\"btn btn-primary btn-xs\" id=\"MBOLogout\">Logout</a>\\n' +\n                            '</div>\\n';\n\n                    } else {\n\n                        // Login failed.\n\n                        var login_form = get_login_form({\n                            classID: result.classID,\n                            className: result.className,\n                            staffName: result.staffName,\n                            classTime: result.classTime,\n                            location: location\n                        });\n\n                        class_registration_content += '<hr/>' + json.message + login_form.html();\n\n                    }\n                    // Update the modal content\n                    $('#classRegister').html(class_registration_content);\n\n                } // ./ Ajax Success\n            }) // End Ajax\n                .fail(function (json) {\n                    $('#classRegister').html('ERROR SIGNING IN');\n                    console.log(json);\n                }); // End Fail\n\n        });\n\n        /**\n         * Create MBO Account and display Confirmation\n         *\n         *\n         */\n        $(document).on('submit', 'form[id=\"mzSignUp\"]', function (ev) {\n            ev.preventDefault();\n            var target = $(this).attr(\"href\");\n            var form = $(this);\n            var nonce = $(this).attr(\"data-nonce\");\n            var classID = $(this).attr(\"data-classID\");\n            var formData = form.serializeArray();\n            $('#classRegister').html(spinner);\n            $.ajax({\n                type: \"GET\",\n                dataType: 'json',\n                url: mz_mindbody_schedule.ajaxurl,\n                data: {action: 'mz_create_mbo_account', nonce: formData.nonce, classID: formData.classID, form: form.serialize()},\n                success: function (json) {\n                    if (json.type == \"success\") {\n                        $('.fa-spinner').remove();\n                        $('#classRegister').html(json.message);\n                        // Store in DOM that we are logged in now.\n                        $('[data-loggedMBO]').attr(\"data-loggedMBO\", 1);\n                    } else {\n                        $('#classRegister').html('ERROR CREATING ACCOUNT');\n                        console.log(json);\n                    }\n                } // ./ Ajax Success\n            }) // End Ajax\n                .fail(function (json) {\n                    $('#classRegister').html('ERROR CREATING ACCOUNT');\n                    console.log(json);\n                }); // End Fail\n\n        });\n\n        /**\n         * Display MBO Account Registration form within Sign-Up Modal\n         *\n         *\n         */\n        $(document).on('click', \"a#createMBOAccount\", function (ev) {\n            ev.preventDefault();\n            var target = $(this).attr(\"href\");\n            var nonce = $(this).attr(\"data-nonce\");\n            var classID = $(this).attr(\"data-classID\");\n            $('#classRegister').html(spinner);\n            $.ajax({\n                type: \"GET\",\n                dataType: 'json',\n                url: mz_mindbody_schedule.ajaxurl,\n                data: {action: 'mz_generate_signup_form', nonce: nonce, classID: classID},\n                success: function (json) {\n                    if (json.type == \"success\") {\n                        $('.fa-spinner').remove();\n                        $('#classRegister').html(json.message);\n                    } else {\n                        $('#classRegister').html('ERROR GENERATING SIGN-UP FORM');\n                        console.log(json);\n                    }\n                } // ./ Ajax Success\n            }) // End Ajax\n                .fail(function (json) {\n                    $('#classRegister').html('ERROR GENERATING THE SIGN-UP FORM');\n                    console.log(json);\n                }); // End Fail\n\n        });\n\n        /**\n         * Display Client Schedule within Sign-Up Modal\n         *\n         *\n         */\n        $(document).on('click', \"a#MBOSchedule\", function (ev) {\n            ev.preventDefault();\n            var nonce = $(this).attr(\"data-nonce\");\n            $('#AddedToClass').html(spinner);\n            $.ajax({\n                type: \"GET\",\n                dataType: 'json',\n                url: mz_mindbody_schedule.ajaxurl,\n                data: {action: 'mz_display_client_schedule', nonce: nonce, location: location, siteID: siteID},\n                success: function (json) {\n                    if (json.type == \"success\") {\n                        $('#AddedToClass').html(json.message);\n                    } else {\n                        $('#AddedToClass').html('ERROR RETRIEVING YOUR SCHEDULE');\n                        console.log(json);\n                    }\n                } // ./ Ajax Success\n            }) // End Ajax\n                .fail(function (json) {\n                    $('#AddedToClass').html('ERROR RETRIEVING YOUR SCHEDULE');\n                    console.log(json);\n                }); // End Fail\n\n        });\n\n        /**\n         * Logout of MBO\n         *\n         *\n         */\n        $(document).on('click', \"#MBOLogout\", function (ev) {\n            ev.preventDefault();\n\n            $('#classRegister').html(spinner);\n\n            $.ajax({\n                dataType: 'json',\n                url: mz_mindbody_schedule.ajaxurl,\n                data: {action: 'mz_client_log_out'},\n                success: function(json) {\n                    if (json.type == \"success\") {\n                        $('.signupModalFooter').remove();\n                        $('#classRegister').html(json.message);\n                        // Store in DOM that we are logged out now.\n                        $('[data-loggedMBO]').attr(\"data-loggedMBO\", 0);\n                    } else {\n                        $('#classRegister').html('ERROR LOGGING OUT');\n                        console.log(json);\n                    }\n                } // ./ Ajax Success\n            }) // End Ajax\n                .fail(function (json) {\n                    $('#classRegister').html('ERROR LOGGING OUT');\n                    console.log(json);\n                }); // End Fail\n        });\n\n        /**\n         * Get Login Form\n         *\n         * Pull the Login Form from the HTML DOM\n         */\n        function get_login_form(additional_data){\n            Object.keys(additional_data).forEach(function(key) {\n                $('#mzLogIn').append('<input type=\"hidden\" name=\"' + key + '\" value=\"' + additional_data[key] + '\" />');\n            });\n            return $('#mzLogInContainer');\n        }\n\n        function logout(){\n            $.ajax({\n                dataType: 'json',\n                url: mz_mindbody_schedule.ajaxurl,\n                data: {action: 'mz_client_log_out'},\n                success: function(json) {\n                    if (json.type == \"success\") {\n                        // Store in DOM that we are logged out now.\n                        $('[data-loggedMBO]').attr(\"data-loggedMBO\", 0);\n                    } else {\n                        console.log(json);\n                    }\n                } // ./ Ajax Success\n            }) // End Ajax\n                .fail(function (json) {\n                    console.log(json);\n                }); // End Fail\n        }\n\n        /**\n         * Toggle Visibility\n         * source: https://css-tricks.com/snippets/javascript/showhide-element/\n         */\n        function toggle_visibility(id) {\n            var e = document.getElementById(id);\n            if (e === null){\n                return false;\n            }\n            if(e.style.display == 'block')\n                e.style.display = 'none';\n            else\n                e.style.display = 'block';\n        }\n\n    }); // End document ready\n})(jQuery);"],"sourceRoot":"assets/scripts/"}