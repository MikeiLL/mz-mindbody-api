{"version":3,"sources":["../bower_components/bootstrap-sass-official/assets/javascripts/bootstrap/button.js","../assets/scripts/jquery.filtertable.mz.js"],"names":["$","Plugin","option","this","each","$this","data","options","Button","toggle","setState","element","$element","extend","DEFAULTS","isLoading","VERSION","loadingText","prototype","state","d","$el","val","is","resetText","setTimeout","proxy","addClass","attr","removeClass","removeAttr","changed","$parent","closest","length","$input","find","prop","hasClass","trigger","toggleClass","old","fn","button","Constructor","noConflict","document","on","e","$btn","target","call","preventDefault","test","type","jQuery","filter_by_location","el","window","mz_mbo_selectValue","jversion","jquery","split","jmajor","parseFloat","jminor","expr","filterTableFind","a","i","m","text","toUpperCase","indexOf","createPseudo","arg","filterTable","defaults","autofocus","callback","containerClass","containerTag","hideTFootOnFilter","showAllHeaderRows","highlightClass","inputSelector","inputName","inputType","label","minRows","placeholder","preventReturnKey","quickList","quickListClass","quickListGroupTag","quickListTag","visibleClass","selector","locations","hsc","replace","settings","doFiltering","table","q","tbody","show","hide","filter","t","container","quicks","styled_select","append","created_filter","nodeName","prev","parent","prepend","ev","keyCode","which","bindWithDelay","bind","Object","keys","forEach","value","index","focus","before"],"mappings":"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","file":"mz_filtertable.js","sourcesContent":["/* ========================================================================\n * Bootstrap: button.js v3.3.4\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = $.extend({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.3.4'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state = state + 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state])\n\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked') && this.$element.hasClass('active')) changed = false\n        else $parent.find('.active').removeClass('active')\n      }\n      if (changed) $input.prop('checked', !this.$element.hasClass('active')).trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n    }\n\n    if (changed) this.$element.toggleClass('active')\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target)\n      if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')\n      Plugin.call($btn, 'toggle')\n      e.preventDefault()\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n}(jQuery);\n","/**\n * Modified by Mike iLL/mZoo.org for mz_mindbody_api plugin\n *\n * jquery.filterTable.mz\n *\n * This plugin will add a search filter to tables. When typing in the filter,\n * any rows that do not contain the filter will be hidden.\n *\n * Utilizes bindWithDelay() if available. https://github.com/bgrins/bindWithDelay\n *\n * @version v1.5.4\n * @author Sunny Walker, swalker@hawaii.edu\n * @license MIT\n */\n(function($) {\n\twindow.mz_mbo_selectValue = '0'; // initialize global variable set by DOM select element\n    var jversion = $.fn.jquery.split('.'), jmajor = parseFloat(jversion[0]), jminor = parseFloat(jversion[1]);\n    function filter_by_location(el) {\n    \t// Filter out divs which are hidden from text search, \n    \tif ($(el).find('.mz_time_of_day')) // but keep hidden time of day in result set\n    \t\treturn true;\n    \treturn (($(el).find('.mz_location_'+window.mz_mbo_selectValue)).length > 0); // is a displayed div\n    \t}\n    if (jmajor<2 && jminor<8) { // build the pseudo selector for jQuery < 1.8\n        $.expr[':'].filterTableFind = function(a, i, m) { // build the case insensitive filtering functionality as a pseudo-selector expression\n        \tif ((window.mz_mbo_selectValue == '0' || ($(el).find('.mz_location_'+window.mz_mbo_selectValue)).length > 0))\n            return $(a).text().toUpperCase().indexOf(m[3].toUpperCase())>=0;\n        };\n    } else { // build the pseudo selector for jQuery >= 1.8\n        $.expr[':'].filterTableFind = jQuery.expr.createPseudo(function(arg) {\n            return function(el) {\n            \tif (window.mz_mbo_selectValue == '0' || filter_by_location(el) === true) {\n                \treturn $(el).text().toUpperCase().indexOf(arg.toUpperCase())>=0;\n                \t}\n            };\n        });\n    }\n    $.fn.filterTable = function(options) { // define the filterTable plugin\n        var defaults = { // start off with some default settings\n                autofocus:         false,               // make the filter input field autofocused (not recommended for accessibility)\n                callback:          null,                // callback function: function(term, table){}\n                containerClass:    'filter-table',      // class to apply to the container\n                containerTag:      'p',                 // tag name of the container\n                hideTFootOnFilter: false,               // if true, the table's tfoot(s) will be hidden when the table is filtered\n                showAllHeaderRows: true,                // if true, table rows with class header will always show\n                highlightClass:    'alt',               // class applied to cells containing the filter term\n                inputSelector:     null,                // use the element with this selector for the filter input field instead of creating one\n                inputName:         '',                  // name of filter input field\n                inputType:         'search',            // tag name of the filter input tag\n                label:             'Filter:',           // text to precede the filter input tag\n                minRows:           8,                   // don't show the filter on tables with less than this number of rows\n                placeholder:       'search this table', // HTML5 placeholder text for the filter field\n                preventReturnKey:  true,                // prevent the return key in the filter input field from trigger form submits\n                quickList:         [],                  // list of phrases to quick fill the search\n                quickListClass:    'quick',             // class of each quick list item\n                quickListGroupTag: '',                  // tag surrounding quick list items (e.g., ul)\n                quickListTag:      'a',                 // tag type of each quick list item (e.g., a or li)\n                visibleClass:      'visible',           // class applied to visible rows\n                selector:\t\t   'All Locations',\t\t// label in default select option\n                locations:\t\t\t{}\t\t\t\t\t// empty array to hold locations\n            },\n            hsc = function(text) { // mimic PHP's htmlspecialchars() function\n                return text.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n            },\n            settings = $.extend({}, defaults, options); // merge the user's settings into the defaults\n\n        var doFiltering = function(table, q) { // handle the actual table filtering\n                var tbody=table.find('tbody'); // cache the tbody element\n                if (q==='') { // if the filtering query is blank\n                    tbody.find('tr').show().addClass(settings.visibleClass); // show all rows\n                    tbody.find('td').removeClass(settings.highlightClass); // remove the row highlight from all cells\n                    if (settings.hideTFootOnFilter) { // show footer if the setting was specified\n                        table.find('tfoot').show();\n                    }\n                } else { // if the filter query is not blank\n                    tbody.find('tr').hide().removeClass(settings.visibleClass); // hide all rows, assuming none were found\n                    if (settings.hideTFootOnFilter) { // hide footer if the setting was specified\n                        table.find('tfoot').hide();\n                    }\n                    tbody.find('td').removeClass(settings.highlightClass).filter(':filterTableFind(\"'+q.replace(/(['\"])/g,'\\\\$1')+'\")').addClass(settings.highlightClass).closest('tr').show().addClass(settings.visibleClass); // highlight (class=alt) only the cells that match the query and show their rows\n                }\n                if (settings.showAllHeaderRows) {\n                    \ttable.find('tr.header').show().addClass(settings.visibleClass);\n                    }\n                if (settings.callback) { // call the callback function\n                    settings.callback(q, table);\n                }\n            }; // doFiltering()\n\n        return this.each(function() {\n            var t = $(this), // cache the table\n                tbody = t.find('tbody'), // cache the tbody\n                container = null, // placeholder for the filter field container DOM node\n                quicks = null, // placeholder for the quick list items\n                filter = null, // placeholder for the field field DOM node\n        styled_select = $(\"<div></div>\").attr(\"class\", 'mz_mbo_styled_select');\n\t\t\t\tselector = $(\"<select></select>\").attr(\"id\", 'location_selector').attr(\"class\", 'mz_mbo_selector');\n\t\t\t\t\tselector.append('<option value=\"0\">'+settings.selector+'</option>');\n\t\t\t\t\t$.each(settings.locations, function (i, el) {\n\t\t\t\t\t\tselector.append('<option value=\"'+i+'\">' + el + '</option>');\n\t\t\t\t\t});\n\t\t\t\t\tstyled_select.append(selector);\n                created_filter = true; // was the filter created or chosen from an existing element?\n            if (t[0].nodeName==='TABLE' && tbody.length>0 && (settings.minRows===0 || (settings.minRows>0 && tbody.find('tr').length>settings.minRows)) && !t.prev().hasClass(settings.containerClass)) { // only if object is a table and there's a tbody and at least minRows trs and hasn't already had a filter added\n                if (settings.inputSelector && $(settings.inputSelector).length===1) { // use a single existing field as the filter input field\n                    filter = $(settings.inputSelector);\n                    container = filter.parent(); // container to hold the quick list options\n                    created_filter = false;\n                } else { // create the filter input field (and container)\n                    container = $('<'+settings.containerTag+' />'); // build the container tag for the filter field\n                    if (settings.containerClass!=='') { // add any classes that need to be added\n                        container.addClass(settings.containerClass);\n                    }\n                    container.prepend(settings.label+' '); // add the label for the filter field\n                    filter = $('<input type=\"'+settings.inputType+'\" placeholder=\"'+settings.placeholder+'\" name=\"'+settings.inputName+'\" />'); // build the filter field\n                    if (settings.preventReturnKey) { // prevent return in the filter field from submitting any forms\n                        filter.on('keydown', function(ev) {\n                            if ((ev.keyCode || ev.which) === 13) {\n                                ev.preventDefault();\n                                return false;\n                            }\n                        });\n                    }\n                }\n                if (settings.autofocus) { // add the autofocus attribute if requested\n                    filter.attr('autofocus', true);\n                }\n                if ($.fn.bindWithDelay) { // does bindWithDelay() exist?\n                    filter.bindWithDelay('keyup', function() { // bind doFiltering() to keyup (delayed)\n                        doFiltering(t, $(this).val());\n                    }, 200);\n                } else { // just bind to onKeyUp\n                    filter.bind('keyup', function() { // bind doFiltering() to keyup\n                        doFiltering(t, $(this).val());\n                    });\n                } // keyup binding block\n                filter.bind('click search', function() { // bind doFiltering() to click and search events\n                    doFiltering(t, $(this).val());\n                });\n                if (created_filter) { // add the filter field to the container if it was created by the plugin\n                    container.append(filter);\n                }\n\t\t\t\tselector.bind('change', function () { // bind doFiltering() to click and search events\n\t\t\t\t\twindow.mz_mbo_selectValue = $(this).val();\n\t\t\t\t\tif ($(this).val() != '0') {\n\t\t\t\t\t\t\t$( \".mz_schedule_table\" ).hide(); // hide all the divs in the schedule\n\t\t\t\t\t\t\t$( \".mz_location_\"+$(this).val() ).show();\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t$( \".mz_schedule_table\" ).show();\n\t\t\t\t\t\t\tObject.keys(settings.locations).forEach(function(value) {\n\t\t\t\t\t\t\t\t\t$( \".mz_location_\"+value ).show();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t});\n                if (settings.quickList.length>0) { // are there any quick list items to add?\n                    quicks = settings.quickListGroupTag ? $('<'+settings.quickListGroupTag+' />') : container;\n                    $.each(settings.quickList, function(index, value) { // for each quick list item...\n                        var q = $('<'+settings.quickListTag+' class=\"'+settings.quickListClass+'\" />'); // build the quick list item link\n                        q.text(hsc(value)); // add the item's text\n                        if (q[0].nodeName==='A') {\n                            q.attr('href', '#'); // add a (worthless) href to the item if it's an anchor tag so that it gets the browser's link treatment\n                        }\n                        q.bind('click', function(e) { // bind the click event to it\n                            e.preventDefault(); // stop the normal anchor tag behavior from happening\n                            filter.val(value).focus().trigger('click'); // send the quick list value over to the filter field and trigger the event\n                        });\n                        quicks.append(q); // add the quick list link to the quick list groups container\n                    }); // each quick list item\n                    if (quicks!==container) {\n                        container.append(quicks); // add the quick list groups container to the DOM if it isn't already there\n                    }\n                } // if quick list items\n                if ((selector!==container) && (Object.keys(settings.locations).length > 1)) {\n                        container.append(styled_select); // add the selector container to the DOM if it isn't already there\n                    }\n                if (created_filter) { // add the filter field and quick list container to just before the table if it was created by the plugin\n                    t.before(container);\n                }\n            } // if the functionality should be added\n        }); // return this.each\n    }; // $.fn.filterTable\n})(jQuery);\n"],"sourceRoot":"/source/"}